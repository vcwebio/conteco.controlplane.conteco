#!/usr/bin/env bash
if [[ "$1" == "for-each-node" ]] ; then
(
	shift
    . executionplane-invoke "$0 $@"
	if [[ $# -gt 1 ]] ; then
		rootPath="${CONTECO_PWD}/${BASH_ARGV[0]}"
	else
		rootPath="${CONTECO_PWD}/$1"
	fi
	command=$1
	if [[ " deploy stack module " == *"$command"* ]] ; then
		deployPath="$rootPath/conteco/docker-compose"
		if [[ -f $deployPath/environment ]] ; then
			. $deployPath/environment
		fi
	fi
	imageName="${CONTECO_REALM}/${CONTECO_ECOSYSTEM}.${CONTECO_TYPE}.${CONTECO_NAME}"
	case $command in
		build)
			.base config $@
			;;
		deploy)
			if [[ "$CONTECO_TYPE" != "external" ]] ; then
				executionplane rm $deployPath/stacks/*
				if [[ "$CONTECO_TYPE" == "stack" ]] ; then
					config-deploy-generate-templates-stack $deployPath
				elif [[ "$CONTECO_TYPE" == "module" ]] ; then
					config-deploy-gather-stacks-module $deployPath
				fi
				if [[ " stack module " ==  *"$CONTECO_TYPE"* ]] ; then
					config-deploy-generate-environment-stack $deployPath
				fi
				config-deploy-generate-docker-compose-yml $deployPath
				config-deploy-generate-environment-module $deployPath
			fi
			;;
		increment)
			.base config $@
			;;
		remove-crs)
			.base config $@
			;;
		set-version)
			.base config $@
			;;
		*)
			executionplane-error "Method not recognised: $1."
			;;
	esac
    executionplane-complete
)
else
    export PATH="$CONTECO_EXECUTIONPLANE_APIINTERNALPATH_CONTECO"
	for-each $(basename $0) $@
fi
